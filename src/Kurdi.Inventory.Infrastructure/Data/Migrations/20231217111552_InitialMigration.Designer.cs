// <auto-generated />
using System;
using Kurdi.Inventory.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Kurdi.Inventory.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231217111552_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Kurdi.Inventory.Core.Entities.CategoryAggregate.Category", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<bool>("Activation")
                        .HasColumnType("boolean")
                        .HasColumnName("activation");

                    b.Property<bool>("HasParent")
                        .HasColumnType("boolean")
                        .HasColumnName("has_parent");

                    b.Property<string>("ParentName")
                        .HasColumnType("text")
                        .HasColumnName("parent_name");

                    b.HasKey("Name")
                        .HasName("pk_categories");

                    b.HasIndex("ParentName")
                        .HasDatabaseName("ix_categories_parent_name");

                    b.ToTable("categories", (string)null);

                    b.HasData(
                        new
                        {
                            Name = "MEN",
                            Activation = true,
                            HasParent = false
                        },
                        new
                        {
                            Name = "WOMEN",
                            Activation = true,
                            HasParent = false
                        });
                });

            modelBuilder.Entity("Kurdi.Inventory.Core.Entities.CategoryAggregate.CategoryDetails", b =>
                {
                    b.Property<string>("LanguageCode")
                        .HasColumnType("text")
                        .HasColumnName("language_code");

                    b.Property<string>("CategoryName")
                        .HasColumnType("text")
                        .HasColumnName("category_name");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("TranslatedName")
                        .HasColumnType("text")
                        .HasColumnName("translated_name");

                    b.HasKey("LanguageCode", "CategoryName")
                        .HasName("pk_categories_details");

                    b.HasIndex("CategoryName")
                        .HasDatabaseName("ix_categories_details_category_name");

                    b.HasIndex("Name")
                        .HasDatabaseName("ix_categories_details_name");

                    b.ToTable("categories_details", (string)null);

                    b.HasData(
                        new
                        {
                            LanguageCode = "en",
                            CategoryName = "MEN",
                            Description = "Men Description",
                            TranslatedName = "Men"
                        },
                        new
                        {
                            LanguageCode = "ar",
                            CategoryName = "MEN",
                            Description = "الوصف رجالي",
                            TranslatedName = "رجالي"
                        },
                        new
                        {
                            LanguageCode = "en",
                            CategoryName = "WOMEN",
                            Description = "Women Description",
                            TranslatedName = "Men"
                        },
                        new
                        {
                            LanguageCode = "ar",
                            CategoryName = "WOMEN",
                            Description = "نسائي الوصف",
                            TranslatedName = "نسائي"
                        });
                });

            modelBuilder.Entity("Kurdi.Inventory.Core.Entities.Language", b =>
                {
                    b.Property<string>("LanguageCode")
                        .HasColumnType("text")
                        .HasColumnName("language_code");

                    b.Property<bool>("Activation")
                        .HasColumnType("boolean")
                        .HasColumnName("activation");

                    b.Property<string>("LanguageName")
                        .HasColumnType("text")
                        .HasColumnName("language_name");

                    b.HasKey("LanguageCode")
                        .HasName("pk_languages");

                    b.ToTable("languages", (string)null);

                    b.HasData(
                        new
                        {
                            LanguageCode = "ar",
                            Activation = true,
                            LanguageName = "Arabic"
                        },
                        new
                        {
                            LanguageCode = "en",
                            Activation = true,
                            LanguageName = "English"
                        });
                });

            modelBuilder.Entity("Kurdi.Inventory.Core.Entities.ProductAggregate.Product", b =>
                {
                    b.Property<string>("Sku")
                        .HasColumnType("text")
                        .HasColumnName("sku");

                    b.Property<bool>("Activation")
                        .HasColumnType("boolean")
                        .HasColumnName("activation");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("category_name");

                    b.Property<int>("SupplierIdentity")
                        .HasColumnType("integer")
                        .HasColumnName("supplier_identity");

                    b.HasKey("Sku")
                        .HasName("pk_products");

                    b.HasIndex("CategoryName")
                        .HasDatabaseName("ix_products_category_name");

                    b.ToTable("products", (string)null);

                    b.HasData(
                        new
                        {
                            Sku = "1",
                            Activation = true,
                            CategoryName = "MEN",
                            SupplierIdentity = 0
                        },
                        new
                        {
                            Sku = "2",
                            Activation = true,
                            CategoryName = "WOMEN",
                            SupplierIdentity = 0
                        });
                });

            modelBuilder.Entity("Kurdi.Inventory.Core.Entities.ProductAggregate.ProductDetails", b =>
                {
                    b.Property<string>("LanguageCode")
                        .HasColumnType("text")
                        .HasColumnName("language_code");

                    b.Property<string>("Sku")
                        .HasColumnType("text")
                        .HasColumnName("sku");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("ProductSku")
                        .HasColumnType("text")
                        .HasColumnName("product_sku");

                    b.HasKey("LanguageCode", "Sku")
                        .HasName("pk_product_details");

                    b.HasIndex("ProductSku")
                        .HasDatabaseName("ix_product_details_product_sku");

                    b.HasIndex("Sku")
                        .HasDatabaseName("ix_product_details_sku");

                    b.ToTable("product_details", (string)null);

                    b.HasData(
                        new
                        {
                            LanguageCode = "en",
                            Sku = "1",
                            Description = "Shirt Description",
                            Name = "Shirt"
                        },
                        new
                        {
                            LanguageCode = "ar",
                            Sku = "1",
                            Description = "الوصف 1",
                            Name = "الاسم 1"
                        },
                        new
                        {
                            LanguageCode = "en",
                            Sku = "2",
                            Description = "T-Shirt Description",
                            Name = "T-Shirt"
                        },
                        new
                        {
                            LanguageCode = "ar",
                            Sku = "2",
                            Description = "الوصف 2",
                            Name = "الاسم 2"
                        });
                });

            modelBuilder.Entity("Kurdi.Inventory.Core.Entities.CategoryAggregate.Category", b =>
                {
                    b.HasOne("Kurdi.Inventory.Core.Entities.CategoryAggregate.Category", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentName")
                        .HasConstraintName("fk_categories_categories_parent_temp_id1");

                    b.OwnsOne("Kurdi.Inventory.Core.Entities.TimeStamps", "TimeStamps", b1 =>
                        {
                            b1.Property<string>("CategoryName")
                                .HasColumnType("text")
                                .HasColumnName("name");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("created_at");

                            b1.Property<DateTime?>("DeletedAt")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("deleted_at");

                            b1.Property<DateTime?>("UpdatedAt")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("updated_at");

                            b1.HasKey("CategoryName")
                                .HasName("pk_categories");

                            b1.ToTable("categories");

                            b1.WithOwner()
                                .HasForeignKey("CategoryName")
                                .HasConstraintName("fk_categories_categories_time_stamps_category_temp_id3");

                            b1.HasData(
                                new
                                {
                                    CategoryName = "MEN",
                                    CreatedAt = new DateTime(2023, 12, 17, 11, 15, 52, 322, DateTimeKind.Utc).AddTicks(4107)
                                },
                                new
                                {
                                    CategoryName = "WOMEN",
                                    CreatedAt = new DateTime(2023, 12, 17, 11, 15, 52, 322, DateTimeKind.Utc).AddTicks(4109)
                                });
                        });

                    b.Navigation("Parent");

                    b.Navigation("TimeStamps");
                });

            modelBuilder.Entity("Kurdi.Inventory.Core.Entities.CategoryAggregate.CategoryDetails", b =>
                {
                    b.HasOne("Kurdi.Inventory.Core.Entities.CategoryAggregate.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_categories_details_categories_category_name1");

                    b.HasOne("Kurdi.Inventory.Core.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_categories_details_languages_language_temp_id");

                    b.HasOne("Kurdi.Inventory.Core.Entities.CategoryAggregate.Category", null)
                        .WithMany("CategoryDetails")
                        .HasForeignKey("Name")
                        .HasConstraintName("fk_categories_details_categories_category_temp_id");

                    b.OwnsOne("Kurdi.Inventory.Core.Entities.TimeStamps", "TimeStamps", b1 =>
                        {
                            b1.Property<string>("CategoryDetailsLanguageCode")
                                .HasColumnType("text")
                                .HasColumnName("language_code");

                            b1.Property<string>("CategoryDetailsCategoryName")
                                .HasColumnType("text")
                                .HasColumnName("category_name");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("created_at");

                            b1.Property<DateTime?>("DeletedAt")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("deleted_at");

                            b1.Property<DateTime?>("UpdatedAt")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("updated_at");

                            b1.HasKey("CategoryDetailsLanguageCode", "CategoryDetailsCategoryName")
                                .HasName("pk_categories_details");

                            b1.ToTable("categories_details");

                            b1.WithOwner()
                                .HasForeignKey("CategoryDetailsLanguageCode", "CategoryDetailsCategoryName")
                                .HasConstraintName("fk_categories_details_categories_details_time_stamps_category_");

                            b1.HasData(
                                new
                                {
                                    CategoryDetailsLanguageCode = "ar",
                                    CategoryDetailsCategoryName = "MEN",
                                    CreatedAt = new DateTime(2023, 12, 17, 11, 15, 52, 324, DateTimeKind.Utc).AddTicks(5731)
                                },
                                new
                                {
                                    CategoryDetailsLanguageCode = "en",
                                    CategoryDetailsCategoryName = "MEN",
                                    CreatedAt = new DateTime(2023, 12, 17, 11, 15, 52, 324, DateTimeKind.Utc).AddTicks(5733)
                                },
                                new
                                {
                                    CategoryDetailsLanguageCode = "ar",
                                    CategoryDetailsCategoryName = "WOMEN",
                                    CreatedAt = new DateTime(2023, 12, 17, 11, 15, 52, 324, DateTimeKind.Utc).AddTicks(5734)
                                },
                                new
                                {
                                    CategoryDetailsLanguageCode = "en",
                                    CategoryDetailsCategoryName = "WOMEN",
                                    CreatedAt = new DateTime(2023, 12, 17, 11, 15, 52, 324, DateTimeKind.Utc).AddTicks(5735)
                                });
                        });

                    b.Navigation("Category");

                    b.Navigation("Language");

                    b.Navigation("TimeStamps");
                });

            modelBuilder.Entity("Kurdi.Inventory.Core.Entities.Language", b =>
                {
                    b.OwnsOne("Kurdi.Inventory.Core.Entities.TimeStamps", "TimeStamps", b1 =>
                        {
                            b1.Property<string>("LanguageCode")
                                .HasColumnType("text")
                                .HasColumnName("language_code");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("created_at");

                            b1.Property<DateTime?>("DeletedAt")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("deleted_at");

                            b1.Property<DateTime?>("UpdatedAt")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("updated_at");

                            b1.HasKey("LanguageCode")
                                .HasName("pk_languages");

                            b1.ToTable("languages");

                            b1.WithOwner()
                                .HasForeignKey("LanguageCode")
                                .HasConstraintName("fk_languages_languages_time_stamps_language_temp_id2");

                            b1.HasData(
                                new
                                {
                                    LanguageCode = "ar",
                                    CreatedAt = new DateTime(2023, 12, 17, 11, 15, 52, 319, DateTimeKind.Utc).AddTicks(3612)
                                },
                                new
                                {
                                    LanguageCode = "en",
                                    CreatedAt = new DateTime(2023, 12, 17, 11, 15, 52, 319, DateTimeKind.Utc).AddTicks(3615)
                                });
                        });

                    b.Navigation("TimeStamps");
                });

            modelBuilder.Entity("Kurdi.Inventory.Core.Entities.ProductAggregate.Product", b =>
                {
                    b.HasOne("Kurdi.Inventory.Core.Entities.CategoryAggregate.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_products_categories_category_temp_id2");

                    b.OwnsOne("Kurdi.Inventory.Core.Entities.TimeStamps", "TimeStamps", b1 =>
                        {
                            b1.Property<string>("ProductSku")
                                .HasColumnType("text")
                                .HasColumnName("sku");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("created_at");

                            b1.Property<DateTime?>("DeletedAt")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("deleted_at");

                            b1.Property<DateTime?>("UpdatedAt")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("updated_at");

                            b1.HasKey("ProductSku")
                                .HasName("pk_products");

                            b1.ToTable("products");

                            b1.WithOwner()
                                .HasForeignKey("ProductSku")
                                .HasConstraintName("fk_products_products_time_stamps_product_temp_id3");

                            b1.HasData(
                                new
                                {
                                    ProductSku = "1",
                                    CreatedAt = new DateTime(2023, 12, 17, 11, 15, 52, 328, DateTimeKind.Utc).AddTicks(5705)
                                },
                                new
                                {
                                    ProductSku = "2",
                                    CreatedAt = new DateTime(2023, 12, 17, 11, 15, 52, 328, DateTimeKind.Utc).AddTicks(5709)
                                });
                        });

                    b.OwnsOne("Kurdi.Inventory.Core.Entities.ProductAggregate.ProductPrices", "ProductPrices", b1 =>
                        {
                            b1.Property<string>("ProductSku")
                                .HasColumnType("text")
                                .HasColumnName("sku");

                            b1.Property<double>("CostPrice")
                                .HasColumnType("double precision")
                                .HasColumnName("cost_price");

                            b1.Property<double>("Discount")
                                .HasColumnType("double precision")
                                .HasColumnName("discount");

                            b1.Property<bool>("IsDiscounted")
                                .HasColumnType("boolean")
                                .HasColumnName("is_discounted");

                            b1.Property<double>("SellingPrice")
                                .HasColumnType("double precision")
                                .HasColumnName("selling_price");

                            b1.HasKey("ProductSku")
                                .HasName("pk_products");

                            b1.ToTable("products");

                            b1.WithOwner()
                                .HasForeignKey("ProductSku")
                                .HasConstraintName("fk_products_products_product_prices_product_temp_id1");

                            b1.HasData(
                                new
                                {
                                    ProductSku = "1",
                                    CostPrice = 60.0,
                                    Discount = 15.0,
                                    IsDiscounted = true,
                                    SellingPrice = 100.0
                                },
                                new
                                {
                                    ProductSku = "2",
                                    CostPrice = 140.0,
                                    Discount = 20.0,
                                    IsDiscounted = false,
                                    SellingPrice = 200.0
                                });
                        });

                    b.OwnsOne("Kurdi.Inventory.Core.Entities.ProductAggregate.ProductQuantity", "ProductQuantity", b1 =>
                        {
                            b1.Property<string>("ProductSku")
                                .HasColumnType("text")
                                .HasColumnName("sku");

                            b1.Property<int>("AvailableStock")
                                .HasColumnType("integer")
                                .HasColumnName("available_stock");

                            b1.Property<int>("ReservedStock")
                                .HasColumnType("integer")
                                .HasColumnName("reserved_stock");

                            b1.Property<int>("TotalStock")
                                .HasColumnType("integer")
                                .HasColumnName("total_stock");

                            b1.HasKey("ProductSku")
                                .HasName("pk_products");

                            b1.ToTable("products");

                            b1.WithOwner()
                                .HasForeignKey("ProductSku")
                                .HasConstraintName("fk_products_products_product_quantity_product_temp_id2");

                            b1.HasData(
                                new
                                {
                                    ProductSku = "1",
                                    AvailableStock = 800,
                                    ReservedStock = 200,
                                    TotalStock = 1000
                                },
                                new
                                {
                                    ProductSku = "2",
                                    AvailableStock = 1500,
                                    ReservedStock = 500,
                                    TotalStock = 2000
                                });
                        });

                    b.Navigation("Category");

                    b.Navigation("ProductPrices");

                    b.Navigation("ProductQuantity");

                    b.Navigation("TimeStamps");
                });

            modelBuilder.Entity("Kurdi.Inventory.Core.Entities.ProductAggregate.ProductDetails", b =>
                {
                    b.HasOne("Kurdi.Inventory.Core.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_product_details_languages_language_temp_id1");

                    b.HasOne("Kurdi.Inventory.Core.Entities.ProductAggregate.Product", null)
                        .WithMany("ProductDetails")
                        .HasForeignKey("ProductSku")
                        .HasConstraintName("fk_product_details_products_product_sku");

                    b.HasOne("Kurdi.Inventory.Core.Entities.ProductAggregate.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Sku")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_product_details_products_product_temp_id");

                    b.OwnsOne("Kurdi.Inventory.Core.Entities.TimeStamps", "TimeStamps", b1 =>
                        {
                            b1.Property<string>("ProductDetailsLanguageCode")
                                .HasColumnType("text")
                                .HasColumnName("language_code");

                            b1.Property<string>("ProductDetailsSku")
                                .HasColumnType("text")
                                .HasColumnName("sku");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("created_at");

                            b1.Property<DateTime?>("DeletedAt")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("deleted_at");

                            b1.Property<DateTime?>("UpdatedAt")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("updated_at");

                            b1.HasKey("ProductDetailsLanguageCode", "ProductDetailsSku")
                                .HasName("pk_product_details");

                            b1.ToTable("product_details");

                            b1.WithOwner()
                                .HasForeignKey("ProductDetailsLanguageCode", "ProductDetailsSku")
                                .HasConstraintName("fk_product_details_product_details_time_stamps_product_details");

                            b1.HasData(
                                new
                                {
                                    ProductDetailsLanguageCode = "ar",
                                    ProductDetailsSku = "1",
                                    CreatedAt = new DateTime(2023, 12, 17, 11, 15, 52, 331, DateTimeKind.Utc).AddTicks(5351)
                                },
                                new
                                {
                                    ProductDetailsLanguageCode = "en",
                                    ProductDetailsSku = "1",
                                    CreatedAt = new DateTime(2023, 12, 17, 11, 15, 52, 331, DateTimeKind.Utc).AddTicks(5354)
                                },
                                new
                                {
                                    ProductDetailsLanguageCode = "ar",
                                    ProductDetailsSku = "2",
                                    CreatedAt = new DateTime(2023, 12, 17, 11, 15, 52, 331, DateTimeKind.Utc).AddTicks(5355)
                                },
                                new
                                {
                                    ProductDetailsLanguageCode = "en",
                                    ProductDetailsSku = "2",
                                    CreatedAt = new DateTime(2023, 12, 17, 11, 15, 52, 331, DateTimeKind.Utc).AddTicks(5355)
                                });
                        });

                    b.Navigation("Language");

                    b.Navigation("Product");

                    b.Navigation("TimeStamps");
                });

            modelBuilder.Entity("Kurdi.Inventory.Core.Entities.CategoryAggregate.Category", b =>
                {
                    b.Navigation("CategoryDetails");
                });

            modelBuilder.Entity("Kurdi.Inventory.Core.Entities.ProductAggregate.Product", b =>
                {
                    b.Navigation("ProductDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
